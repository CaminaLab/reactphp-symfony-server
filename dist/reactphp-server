<?php

// --- ReactPHP ----
if (!($port = $_SERVER['APP_PORT'] ?? null)) {
    throw new \RuntimeException('APP_PORT environment variable is not defined. You need to define this environment variable to run the application as a server.');
}

$loop = \React\EventLoop\Factory::create();

$server = new \React\Http\Server(function (\Psr\Http\Message\ServerRequestInterface $request) use ($kernel) {
    $method = $request->getMethod();
    $headers = $request->getHeaders();
    $content = $request->getBody()->getContents();

    // Get POST parameters
    $post = [];

    if (
        \in_array(strtoupper($method), ['POST', 'PUT', 'DELETE', 'PATCH']) &&
        isset($headers['Content-Type']) && (0 === strpos($headers['Content-Type'][0], 'application/x-www-form-urlencoded'))
    ) {
        parse_str($content, $post);
    }

    // Create the Symfony request
    $sfRequest = new \Symfony\Component\HttpFoundation\Request(
        $request->getQueryParams(),
        $post,
        [],
        [],
        $request->getUploadedFiles(),
        [],
        $content
    );

    $sfRequest->setMethod($method);
    $sfRequest->headers->replace($headers);
    $sfRequest->server->set('REQUEST_URI', $request->getUri()->getPath());

//    if (isset($headers['Host'])) {
//        $sfRequest->server->set('SERVER_NAME', explode(':', $headers['Host'])[0]);
//    }

    try {
        $sfResponse = $kernel->handle($sfRequest);
    } catch (\Throwable $e) {
        echo $e->getMessage(), "\n", $e->getTraceAsString();
    }

    return new \React\Http\Response(
        $sfResponse->getStatusCode(),
        $sfResponse->headers->all(),
        $sfResponse->getContent()
    );
});

ini_set('display_errors', 1);
$socket = new \React\Socket\Server('0.0.0.0:' . $port, $loop);
$server->listen($socket);

echo "Server running on port $port\n";

$loop->run();