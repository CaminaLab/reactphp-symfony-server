#!/usr/bin/env php
<?php

/**
 * This file is part of the reactphp-symfony-server package.
 *
 * (c) Jordi DomÃ¨nech Bonilla
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use Jdomenechb\ReactPhpSymfonyServer\Loop\RequestLoop;
use React\EventLoop\Factory;
use React\Http\Server as HttpServer;
use React\Socket\Server as SocketServer;
use Symfony\Component\Console\Output\ConsoleOutput;

require \dirname(__DIR__, 3) . DIRECTORY_SEPARATOR . 'autoload.php';

/*
 * Helpers
 */
$tmpFile = sys_get_temp_dir() . DIRECTORY_SEPARATOR . '.reactphp-symfony-server-tmp';
$projectRootPath = \dirname(__DIR__, 4);

/*
 * Preparation of reference data
 */

$consoleOutput = new ConsoleOutput();

$setup = new Jdomenechb\ReactPhpSymfonyServer\Setup\ServerSetup($consoleOutput, $projectRootPath, $tmpFile);
$includeFile = $setup->startup();

/*
 * Server start
 */
require $includeFile;

// --- ReactPHP ----
if (!($port = $_SERVER['APP_PORT'] ?? 8000)) {
    $msg = 'APP_PORT environment variable is not defined. You need to define this environment variable to run '
    . 'the application as a server.';

    throw new \RuntimeException($msg);
}

$loop = Factory::create();
$requestLoop = new RequestLoop($kernel, new ConsoleOutput(), $projectRootPath);

$server = new HttpServer([$requestLoop, 'request']);
$socket = new SocketServer('0.0.0.0:' . $port, $loop);
$server->listen($socket);

$consoleOutput->writeln("Server running on port ${port}");
$loop->run();
